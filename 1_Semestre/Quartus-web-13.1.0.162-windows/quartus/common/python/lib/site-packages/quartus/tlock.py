# Copyright 2013 Altera Corporation.
# $Header: //acds/rel/13.1/quartus/ccl/py/tlock.py#1 $

"""
Thread locking module for the web server
"""

__author__ = "Michael Durland (mdurland@altera.com)"
__version__ = "$Revision: #1 $"
__date__ = "$Date: 2013/08/11 $"
__copyright__ = "Copyright 2013 Altera Corporation."

import threading

THREAD_LOCK = threading.RLock()

def thread_lock(f):
    """
    Decorator function used to ensure the wrapped function is not running
    while any other wrapped functions are running.  Basically it forces
    multiple threads to only call one function at a time.
    """
    def locked_f(*args, **kwargs):
        THREAD_LOCK.acquire()
        result = f(*args, **kwargs)
        THREAD_LOCK.release()
        return result
    return locked_f

